@startuml OpenApi Type diagram
'!theme blueprint

hide <<Path>> circle
hide <<Response>> circle
hide <<Parameter>> circle
hide empty methods
hide empty fields
set namespaceSeparator none

title Browse API v1.16.0
footer OpenApi Type diagram - futurum.openapi-to-plantuml
class "GET /item_summary/search" <<Path>> {
{field} aspect_filter : string {O}
{field} auto_correct : string {O}
{field} category_ids : string {O}
{field} charity_ids : string {O}
{field} compatibility_filter : string {O}
{field} epid : string {O}
{field} fieldgroups : string {O}
{field} filter : string {O}
{field} gtin : string {O}
{field} limit : string {O}
{field} offset : string {O}
{field} q : string {O}
{field} sort : string {O}
}

class "GET /item_summary/search 200" <<Response>> { }
class "GET /item_summary/search 400" <<Response>> { }
class "GET /item_summary/search 409" <<Response>> { }
class "GET /item_summary/search 500" <<Response>> { }
class "POST /item_summary/search_by_image" <<Path>> {
{field} aspect_filter : string {O}
{field} category_ids : string {O}
{field} charity_ids : string {O}
{field} fieldgroups : string {O}
{field} filter : string {O}
{field} limit : string {O}
{field} offset : string {O}
{field} sort : string {O}
}

class "POST /item_summary/search_by_image 200" <<Response>> { }
class "POST /item_summary/search_by_image 400" <<Response>> { }
class "POST /item_summary/search_by_image 409" <<Response>> { }
class "POST /item_summary/search_by_image 500" <<Response>> { }
class "GET /item/{item_id}" <<Path>> {
{field} fieldgroups : string {O}
{field} item_id : string
}

class "GET /item/{item_id} 200" <<Response>> { }
class "GET /item/{item_id} 400" <<Response>> { }
class "GET /item/{item_id} 404" <<Response>> { }
class "GET /item/{item_id} 409" <<Response>> { }
class "GET /item/{item_id} 500" <<Response>> { }
class "GET /item/get_item_by_legacy_id" <<Path>> {
{field} fieldgroups : string {O}
{field} legacy_item_id : string
{field} legacy_variation_id : string {O}
{field} legacy_variation_sku : string {O}
}

class "GET /item/get_item_by_legacy_id 200" <<Response>> { }
class "GET /item/get_item_by_legacy_id 400" <<Response>> { }
class "GET /item/get_item_by_legacy_id 404" <<Response>> { }
class "GET /item/get_item_by_legacy_id 409" <<Response>> { }
class "GET /item/get_item_by_legacy_id 500" <<Response>> { }
class "GET /item/" <<Path>> {
{field} item_ids : string {O}
{field} item_group_ids : string {O}
}

class "GET /item/ 200" <<Response>> { }
class "GET /item/ 400" <<Response>> { }
class "GET /item/ 404" <<Response>> { }
class "GET /item/ 409" <<Response>> { }
class "GET /item/ 500" <<Response>> { }
class "GET /item/get_items_by_item_group" <<Path>> {
{field} item_group_id : string
}

class "GET /item/get_items_by_item_group 200" <<Response>> { }
class "GET /item/get_items_by_item_group 400" <<Response>> { }
class "GET /item/get_items_by_item_group 404" <<Response>> { }
class "GET /item/get_items_by_item_group 409" <<Response>> { }
class "GET /item/get_items_by_item_group 500" <<Response>> { }
class "POST /item/{item_id}/check_compatibility" <<Path>> {
{field} item_id : string
{field} X-EBAY-C-MARKETPLACE-ID : string
}

class "POST /item/{item_id}/check_compatibility 200" <<Response>> { }
class "POST /item/{item_id}/check_compatibility 400" <<Response>> { }
class "POST /item/{item_id}/check_compatibility 404" <<Response>> { }
class "POST /item/{item_id}/check_compatibility 409" <<Response>> { }
class "POST /item/{item_id}/check_compatibility 500" <<Response>> { }
class "POST /shopping_cart/add_item" <<Path>> {
}

class "POST /shopping_cart/add_item 200" <<Response>> { }
class "POST /shopping_cart/add_item 204" <<Response>> { }
class "POST /shopping_cart/add_item 400" <<Response>> { }
class "POST /shopping_cart/add_item 403" <<Response>> { }
class "POST /shopping_cart/add_item 409" <<Response>> { }
class "POST /shopping_cart/add_item 500" <<Response>> { }
class "GET /shopping_cart/" <<Path>> {
}

class "GET /shopping_cart/ 200" <<Response>> { }
class "GET /shopping_cart/ 204" <<Response>> { }
class "GET /shopping_cart/ 400" <<Response>> { }
class "GET /shopping_cart/ 403" <<Response>> { }
class "GET /shopping_cart/ 404" <<Response>> { }
class "GET /shopping_cart/ 500" <<Response>> { }
class "POST /shopping_cart/remove_item" <<Path>> {
}

class "POST /shopping_cart/remove_item 200" <<Response>> { }
class "POST /shopping_cart/remove_item 204" <<Response>> { }
class "POST /shopping_cart/remove_item 400" <<Response>> { }
class "POST /shopping_cart/remove_item 403" <<Response>> { }
class "POST /shopping_cart/remove_item 409" <<Response>> { }
class "POST /shopping_cart/remove_item 500" <<Response>> { }
class "POST /shopping_cart/update_quantity" <<Path>> {
}

class "POST /shopping_cart/update_quantity 200" <<Response>> { }
class "POST /shopping_cart/update_quantity 400" <<Response>> { }
class "POST /shopping_cart/update_quantity 403" <<Response>> { }
class "POST /shopping_cart/update_quantity 409" <<Response>> { }
class "POST /shopping_cart/update_quantity 500" <<Response>> { }
class "AddCartItemInput" {
{field} itemId : string
{field} quantity : integer
}

note bottom of AddCartItemInput
The type that defines the fields for the <b>addItems</b> request.
end note

class "AdditionalProductIdentity" {
{field} productIdentity : array<ProductIdentity>
}

note bottom of AdditionalProductIdentity
The type that defines the array of product identifiers associated with the item. This container is returned if the seller has associated the eBay Product Identifier (ePID) with the item and in the request <b> fieldgroups</b> is set to <code>PRODUCT</code>.
end note

class "AddonService" {
{field} selection : string
{field} serviceFee : 
{field} serviceId : string
{field} serviceType : string
}

note bottom of AddonService
This container describes an add-on service that may be selected for an item or that may apply automatically. A charge may be associated with the add-on service.
end note

class "Address" {
{field} addressLine1 : string
{field} addressLine2 : string
{field} city : string
{field} country : string
{field} county : string
{field} postalCode : string
{field} stateOrProvince : string
}

note bottom of Address
The type that defines the fields for an address.
end note

class "Amount" {
{field} currency : string
{field} value : string
}

class "Aspect" {
{field} localizedName : string
{field} localizedValues : array<string>
}

note bottom of Aspect
The type that defines the fields for the name/value pairs for the aspects of the product. For example: BRAND/Apple
end note

class "AspectDistribution" {
{field} aspectValueDistributions : array<AspectValueDistribution>
{field} localizedAspectName : string
}

note bottom of AspectDistribution
The type that define the fields for the aspect information. Aspects are the variations of an item, such as color, size, etc.
end note

class "AspectGroup" {
{field} aspects : array<Aspect>
{field} localizedGroupName : string
}

class "AspectValueDistribution" {
{field} localizedAspectValue : string
{field} matchCount : integer
{field} refinementHref : string
}

note bottom of AspectValueDistribution
The container that defines the fields for the conditions refinements. This container is returned when <b> fieldgroups</b> is set to <code>ASPECT_REFINEMENTS</code> or <code>FULL</code> in the request.
end note

class "AttributeNameValue" {
{field} name : string
{field} value : string
}

note bottom of AttributeNameValue
The type the defines attribute name/value pair fields that specify a product. The type of data depends on the context. For example, if you were using this to specify a specific vehicle, the attribute names would be Make, Model, Year, etc.
end note

class "AuthenticityGuaranteeProgram" {
{field} description : string
{field} termsWebUrl : string
}

note bottom of AuthenticityGuaranteeProgram
A type that identifies whether the item is qualified for the Authenticity Guarantee program.
end note

class "AuthenticityVerificationProgram" {
{field} description : string
{field} termsWebUrl : string
}

note bottom of AuthenticityVerificationProgram
A type that identifies whether the item is from a verified seller.
end note

class "AutoCorrections" {
{field} q : string
}

class "AvailableCoupon" {
{field} constraint : 
{field} discountAmount : 
{field} discountType : string
{field} message : string
{field} redemptionCode : string
{field} termsWebUrl : string
}

class "BuyingOptionDistribution" {
{field} buyingOption : string
{field} matchCount : integer
{field} refinementHref : string
}

note bottom of BuyingOptionDistribution
The container that defines the fields for the buying options refinements. This container is returned when <b> fieldgroups</b> is set to <code>BUYING_OPTION_REFINEMENTS</code> or <code>FULL</code> in the request.
end note

class "CartItem" {
{field} cartItemId : string
{field} cartItemSubtotal : 
{field} image : 
{field} itemId : string
{field} itemWebUrl : string
{field} price : 
{field} quantity : integer
{field} title : string
}

note bottom of CartItem
The type that defines the fields for the individual items in a cart.
end note

class "Category" {
{field} categoryId : string
}

note bottom of Category
This type is used by the <b> categories</b>  container in the response of the <b> search</b>  method, and contains the primary item category ID of the item, as well as the secondary item category if the item was listed in two categories.
end note

class "CategoryDistribution" {
{field} categoryId : string
{field} categoryName : string
{field} matchCount : integer
{field} refinementHref : string
}

note bottom of CategoryDistribution
The container that defines the fields for the category refinements. This container is returned when <b> fieldgroups</b> is set to <code>CATEGORY_REFINEMENTS</code> or <code>FULL</code> in the request.
end note

class "CommonDescriptions" {
{field} description : string
{field} itemIds : array<string>
}

note bottom of CommonDescriptions
The type that defines the fields for the item ids that all use a common description.  Often the item variations within an item group all have the same description. Instead of repeating this description in the item details of each item, a description that is shared by at least one other item is returned in this container. If the description is unique, it is returned in the <b> items.description</b> field.
end note

class "CompatibilityPayload" {
{field} compatibilityProperties : array<AttributeNameValue>
}

note bottom of CompatibilityPayload
An array of attribute name/value pairs used to define a specific product. For example: If you wanted to specify a specific car, one of the name/value pairs would be <br /><code>"name" : "Year", <br />"value" : "2019"</code>  <p> For a list of the attributes required for cars and trucks and motorcycles see <a href="/api-docs/buy/static/api-browse.html#Check">Check compatibility</a> in the Buy Integration Guide.</p>
end note

class "CompatibilityProperty" {
{field} localizedName : string
{field} name : string
{field} value : string
}

note bottom of CompatibilityProperty
This container returns the product attribute name/value pairs that are compatible with the keyword. These attributes are submitted in the  <b>compatibility_filter</b> request field.
end note

class "CompatibilityResponse" {
{field} compatibilityStatus : string
{field} warnings : array<Error>
}

note bottom of CompatibilityResponse
The type that defines the response fields for <b> checkCompatibility</b>.  
end note

class "ConditionDistribution" {
{field} condition : string
{field} conditionId : string
{field} matchCount : integer
{field} refinementHref : string
}

note bottom of ConditionDistribution
The container that defines the fields for the conditions refinements. This container is returned when <b> fieldgroups</b> is set to <code>CONDITION_REFINEMENTS</code> or <code>FULL</code> in the request.
end note

class "ConvertedAmount" {
{field} convertedFromCurrency : string
{field} convertedFromValue : string
{field} currency : string
{field} value : string
}

note bottom of ConvertedAmount
This type defines the monetary value of an amount. It can provide the amount in both the currency used on the eBay site where an item is being offered and the conversion of that value into another currency, if applicable.
end note

class "CoreItem" {
{field} additionalImages : array<Image>
{field} adultOnly : boolean
{field} ageGroup : string
{field} authenticityGuarantee : 
{field} authenticityVerification : 
{field} availableCoupons : array<AvailableCoupon>
{field} bidCount : integer
{field} brand : string
{field} buyingOptions : array<string>
{field} categoryId : string
{field} categoryPath : string
{field} color : string
{field} condition : string
{field} conditionDescription : string
{field} conditionId : string
{field} currentBidPrice : 
{field} description : string
{field} eligibleForInlineCheckout : boolean
{field} enabledForGuestCheckout : boolean
{field} energyEfficiencyClass : string
{field} epid : string
{field} estimatedAvailabilities : array<EstimatedAvailability>
{field} gender : string
{field} gtin : string
{field} image : 
{field} inferredEpid : string
{field} itemAffiliateWebUrl : string
{field} itemCreationDate : string
{field} itemEndDate : string
{field} itemId : string
{field} itemLocation : 
{field} itemWebUrl : string
{field} legacyItemId : string
{field} localizedAspects : array<TypedNameValue>
{field} lotSize : integer
{field} marketingPrice : 
{field} material : string
{field} minimumPriceToBid : 
{field} mpn : string
{field} pattern : string
{field} paymentMethods : array<PaymentMethod>
{field} price : 
{field} priceDisplayCondition : string
{field} primaryItemGroup : 
{field} primaryProductReviewRating : 
{field} priorityListing : boolean
{field} product : 
{field} productFicheWebUrl : string
{field} qualifiedPrograms : array<string>
{field} quantityLimitPerBuyer : integer
{field} reservePriceMet : boolean
{field} returnTerms : 
{field} seller : 
{field} sellerItemRevision : string
{field} shippingOptions : array<ShippingOption>
{field} shipToLocations : 
{field} shortDescription : string
{field} size : string
{field} sizeSystem : string
{field} sizeType : string
{field} subtitle : string
{field} taxes : array<Taxes>
{field} title : string
{field} topRatedBuyingExperience : boolean
{field} tyreLabelImageUrl : string
{field} uniqueBidderCount : integer
{field} unitPrice : 
{field} unitPricingMeasure : string
}

note bottom of CoreItem
An array of containers with the details for all of the items returned.
end note

class "CouponConstraint" {
{field} expirationDate : string
}

note bottom of CouponConstraint
This type is used to provide the expiration date of a coded coupon.
end note

class "Error" {
{field} category : string
{field} domain : string
{field} errorId : integer
{field} inputRefIds : array<string>
{field} longMessage : string
{field} message : string
{field} outputRefIds : array<string>
{field} parameters : array<ErrorParameter>
{field} subdomain : string
}

note bottom of Error
The type that defines the fields that can be returned in an error.
end note

class "ErrorParameter" {
{field} name : string
{field} value : string
}

note bottom of ErrorParameter
An array of name/value pairs that provide details regarding the error.
end note

class "EstimatedAvailability" {
{field} availabilityThreshold : integer
{field} availabilityThresholdType : string
{field} deliveryOptions : array<string>
{field} estimatedAvailabilityStatus : string
{field} estimatedAvailableQuantity : integer
{field} estimatedSoldQuantity : integer
}

note bottom of EstimatedAvailability
The type that defines the fields for the estimated item availability information.
end note

class "Image" {
{field} height : integer
{field} imageUrl : string
{field} width : integer
}

note bottom of Image
Type the defines the details of an image, such as size and image URL. Currently,  only <b> imageUrl</b> is  populated. The <b> height</b> and <b> width</b> were added for future use.
end note

class "Item" {
{field} additionalImages : array<Image>
{field} addonServices : array<AddonService>
{field} adultOnly : boolean
{field} ageGroup : string
{field} authenticityGuarantee : 
{field} authenticityVerification : 
{field} availableCoupons : array<AvailableCoupon>
{field} bidCount : integer
{field} brand : string
{field} buyingOptions : array<string>
{field} categoryId : string
{field} categoryIdPath : string
{field} categoryPath : string
{field} color : string
{field} condition : string
{field} conditionDescription : string
{field} conditionId : string
{field} currentBidPrice : 
{field} description : string
{field} ecoParticipationFee : 
{field} eligibleForInlineCheckout : boolean
{field} enabledForGuestCheckout : boolean
{field} energyEfficiencyClass : string
{field} epid : string
{field} estimatedAvailabilities : array<EstimatedAvailability>
{field} gender : string
{field} gtin : string
{field} image : 
{field} inferredEpid : string
{field} itemAffiliateWebUrl : string
{field} itemCreationDate : string
{field} itemEndDate : string
{field} itemId : string
{field} itemLocation : 
{field} itemWebUrl : string
{field} legacyItemId : string
{field} listingMarketplaceId : string
{field} localizedAspects : array<TypedNameValue>
{field} lotSize : integer
{field} marketingPrice : 
{field} material : string
{field} minimumPriceToBid : 
{field} mpn : string
{field} pattern : string
{field} paymentMethods : array<PaymentMethod>
{field} price : 
{field} priceDisplayCondition : string
{field} primaryItemGroup : 
{field} primaryProductReviewRating : 
{field} priorityListing : boolean
{field} product : 
{field} productFicheWebUrl : string
{field} qualifiedPrograms : array<string>
{field} quantityLimitPerBuyer : integer
{field} reservePriceMet : boolean
{field} returnTerms : 
{field} seller : 
{field} sellerCustomPolicies : array<SellerCustomPolicy>
{field} sellerItemRevision : string
{field} shippingOptions : array<ShippingOption>
{field} shipToLocations : 
{field} shortDescription : string
{field} size : string
{field} sizeSystem : string
{field} sizeType : string
{field} subtitle : string
{field} taxes : array<Taxes>
{field} title : string
{field} topRatedBuyingExperience : boolean
{field} tyreLabelImageUrl : string
{field} uniqueBidderCount : integer
{field} unitPrice : 
{field} unitPricingMeasure : string
{field} warnings : array<Error>
{field} watchCount : integer
}

note bottom of Item
The details of an item that can be purchased.
end note

class "ItemGroup" {
{field} commonDescriptions : array<CommonDescriptions>
{field} items : array<Item>
{field} warnings : array<Error>
}

note bottom of ItemGroup
The type that defines the fields for the item details.
end note

class "ItemGroupSummary" {
{field} itemGroupAdditionalImages : array<Image>
{field} itemGroupHref : string
{field} itemGroupId : string
{field} itemGroupImage : 
{field} itemGroupTitle : string
{field} itemGroupType : string
}

note bottom of ItemGroupSummary
The type that defines the fields for the details of each item in an item group. An item group is  an item that has various aspect differences, such as color, size, storage capacity, etc. When an item group is created, one of the item variations, such as the red shirt size L, is chosen as the "parent". All the other items in the group are the children, such as the blue shirt size L, red shirt size M, etc. <br /><br /><span class="tablenote"><b> Note: </b> This container is returned only if the <b> item_id</b> in the request is an item group (parent ID of an item with variations).</span>
end note

class "ItemLocationImpl" {
{field} addressLine1 : string
{field} addressLine2 : string
{field} city : string
{field} country : string
{field} county : string
{field} postalCode : string
{field} stateOrProvince : string
}

note bottom of ItemLocationImpl
The type that defines the fields for the location of an item, such as information typically used for an address, including postal code, county, state/province, street address, city, and country (2-digit ISO code).
end note

class "ItemReturnTerms" {
{field} extendedHolidayReturnsOffered : boolean
{field} refundMethod : string
{field} restockingFeePercentage : string
{field} returnInstructions : string
{field} returnMethod : string
{field} returnPeriod : 
{field} returnsAccepted : boolean
{field} returnShippingCostPayer : string
}

note bottom of ItemReturnTerms
The type that defines the fields for the seller's return policy.
end note

class "ItemSummary" {
{field} additionalImages : array<Image>
{field} adultOnly : boolean
{field} availableCoupons : boolean
{field} bidCount : integer
{field} buyingOptions : array<string>
{field} categories : array<Category>
{field} compatibilityMatch : string
{field} compatibilityProperties : array<CompatibilityProperty>
{field} condition : string
{field} conditionId : string
{field} currentBidPrice : 
{field} distanceFromPickupLocation : 
{field} energyEfficiencyClass : string
{field} epid : string
{field} image : 
{field} itemAffiliateWebUrl : string
{field} itemCreationDate : string
{field} itemEndDate : string
{field} itemGroupHref : string
{field} itemGroupType : string
{field} itemHref : string
{field} itemId : string
{field} itemLocation : 
{field} itemWebUrl : string
{field} legacyItemId : string
{field} listingMarketplaceId : string
{field} marketingPrice : 
{field} pickupOptions : array<PickupOptionSummary>
{field} price : 
{field} priceDisplayCondition : string
{field} priorityListing : boolean
{field} qualifiedPrograms : array<string>
{field} seller : 
{field} shippingOptions : array<ShippingOptionSummary>
{field} shortDescription : string
{field} thumbnailImages : array<Image>
{field} title : string
{field} topRatedBuyingExperience : boolean
{field} tyreLabelImageUrl : string
{field} unitPrice : 
{field} unitPricingMeasure : string
{field} watchCount : integer
}

note bottom of ItemSummary
The type that defines the fields for the details of a specific item.
end note

class "Items" {
{field} items : array<CoreItem>
{field} total : integer
{field} warnings : array<Error>
}

note bottom of Items
Container for a list of items.
end note

class "LegalAddress" {
{field} addressLine1 : string
{field} addressLine2 : string
{field} city : string
{field} country : string
{field} countryName : string
{field} county : string
{field} postalCode : string
{field} stateOrProvince : string
}

note bottom of LegalAddress
Type that defines the fields for the seller's address.
end note

class "MarketingPrice" {
{field} discountAmount : 
{field} discountPercentage : string
{field} originalPrice : 
{field} priceTreatment : string
}

note bottom of MarketingPrice
The type that defines the fields that describe a seller discount.
end note

class "PaymentMethod" {
{field} paymentMethodType : string
{field} paymentMethodBrands : array<PaymentMethodBrand>
{field} paymentInstructions : array<string>
{field} sellerInstructions : array<string>
}

class "PaymentMethodBrand" {
{field} paymentMethodBrandType : string
{field} logoImage : 
}

class "PickupOptionSummary" {
{field} pickupLocationType : string
}

note bottom of PickupOptionSummary
The type that defines the fields for the local pickup options that are available for the item. It is used by the <b>  pickupOptions</b>  container.
end note

class "Price" {
{field} convertedFromCurrency : string
{field} convertedFromValue : string
{field} currency : string
{field} value : string
}

note bottom of Price
The type that defines the fields for the monetary value and currency of the price of the item.
end note

class "Product" {
{field} additionalImages : array<Image>
{field} additionalProductIdentities : array<AdditionalProductIdentity>
{field} aspectGroups : array<AspectGroup>
{field} brand : string
{field} description : string
{field} gtins : array<string>
{field} image : 
{field} mpns : array<string>
{field} title : string
}

note bottom of Product
The type that defines the fields for the product information of the item.
end note

class "ProductIdentity" {
{field} identifierType : string
{field} identifierValue : string
}

note bottom of ProductIdentity
The type that defines the fields for the product identifier type/value pairs of product associated with an item.
end note

class "RatingHistogram" {
{field} count : integer
{field} rating : string
}

note bottom of RatingHistogram
The type that defines the fields for product ratings. Only products that are in the eBay product catalog can be reviewed and rated.
end note

class "Refinement" {
{field} aspectDistributions : array<AspectDistribution>
{field} buyingOptionDistributions : array<BuyingOptionDistribution>
{field} categoryDistributions : array<CategoryDistribution>
{field} conditionDistributions : array<ConditionDistribution>
{field} dominantCategoryId : string
}

note bottom of Refinement
This type defines the fields for the various refinements of an item. You can use the information in this container to create histograms, which help shoppers choose exactly what they want.
end note

class "Region" {
{field} regionName : string
{field} regionType : string
}

note bottom of Region
This type is used to provide region details for a tax jurisdiction.
end note

class "RemoteShopcartResponse" {
{field} cartItems : array<CartItem>
{field} cartSubtotal : 
{field} cartWebUrl : string
{field} unavailableCartItems : array<CartItem>
{field} warnings : array<Error>
}

note bottom of RemoteShopcartResponse
The type that defines the fields and containers for the member's eBay cart information.
end note

class "RemoveCartItemInput" {
{field} cartItemId : string
}

note bottom of RemoveCartItemInput
The type that defines the fields for the <b>removeItem</b> request.
end note

class "ReviewRating" {
{field} averageRating : string
{field} ratingHistograms : array<RatingHistogram>
{field} reviewCount : integer
}

note bottom of ReviewRating
The type that defines the fields for the rating of a product review.
end note

class "SearchByImageRequest" {
{field} image : string
}

note bottom of SearchByImageRequest
The type that defines the fields for the image information.
end note

class "SearchPagedCollection" {
{field} autoCorrections : 
{field} href : string
{field} itemSummaries : array<ItemSummary>
{field} limit : integer
{field} next : string
{field} offset : integer
{field} prev : string
{field} refinement : 
{field} total : integer
{field} warnings : array<Error>
}

note bottom of SearchPagedCollection
The type that defines the fields for a paginated result set. The response consists of 0 or more sequenced <em> pages</em> where each page has 0 or more items. 
end note

class "Seller" {
{field} feedbackPercentage : string
{field} feedbackScore : integer
{field} sellerAccountType : string
{field} username : string
}

note bottom of Seller
The type that defines the fields for basic information about the seller of the item returned by the <b> item_summary</b> resource.
end note

class "SellerCustomPolicy" {
{field} description : string
{field} label : string
{field} type : string
}

note bottom of SellerCustomPolicy
The container for custom policies that apply to a listed item.
end note

class "SellerDetail" {
{field} feedbackPercentage : string
{field} feedbackScore : integer
{field} sellerAccountType : string
{field} sellerLegalInfo : 
{field} username : string
}

note bottom of SellerDetail
The type that defines the fields for basic and detailed information about the seller of the item returned by the <b> item</b> resource.
end note

class "SellerLegalInfo" {
{field} email : string
{field} fax : string
{field} imprint : string
{field} legalContactFirstName : string
{field} legalContactLastName : string
{field} name : string
{field} phone : string
{field} registrationNumber : string
{field} sellerProvidedLegalAddress : 
{field} termsOfService : string
{field} vatDetails : array<VatDetail>
}

note bottom of SellerLegalInfo
The type that defines the fields for the contact information for a seller.
end note

class "ShipToLocation" {
{field} country : string
{field} postalCode : string
}

note bottom of ShipToLocation
The type that defines the fields for the country and postal code of where an item is to be shipped.
end note

class "ShipToLocations" {
{field} regionExcluded : array<ShipToRegion>
{field} regionIncluded : array<ShipToRegion>
}

note bottom of ShipToLocations
The type that defines the fields that include and exclude geographic regions affecting where the item can be shipped. The seller defines these regions when listing the item.
end note

class "ShipToRegion" {
{field} regionId : string
{field} regionName : string
{field} regionType : string
}

note bottom of ShipToRegion
This type is used provide details about included and excluded shipping regions.
end note

class "ShippingOption" {
{field} additionalShippingCostPerUnit : 
{field} cutOffDateUsedForEstimate : string
{field} fulfilledThrough : string
{field} guaranteedDelivery : boolean
{field} importCharges : 
{field} maxEstimatedDeliveryDate : string
{field} minEstimatedDeliveryDate : string
{field} quantityUsedForEstimate : integer
{field} shippingCarrierCode : string
{field} shippingCost : 
{field} shippingCostType : string
{field} shippingServiceCode : string
{field} shipToLocationUsedForEstimate : 
{field} trademarkSymbol : string
{field} type : string
}

note bottom of ShippingOption
The type that defines the fields for the details of a shipping provider.
end note

class "ShippingOptionSummary" {
{field} guaranteedDelivery : boolean
{field} maxEstimatedDeliveryDate : string
{field} minEstimatedDeliveryDate : string
{field} shippingCost : 
{field} shippingCostType : string
}

note bottom of ShippingOptionSummary
The type that defines the fields for the shipping information.
end note

class "TargetLocation" {
{field} unitOfMeasure : string
{field} value : string
}

note bottom of TargetLocation
The type that defines the fields for the distance between the item location and the buyer's location. 
end note

class "TaxJurisdiction" {
{field} region : 
{field} taxJurisdictionId : string
}

note bottom of TaxJurisdiction
The type that defines the fields for the tax jurisdiction details.
end note

class "Taxes" {
{field} ebayCollectAndRemitTax : boolean
{field} includedInPrice : boolean
{field} shippingAndHandlingTaxed : boolean
{field} taxJurisdiction : 
{field} taxPercentage : string
{field} taxType : string
}

note bottom of Taxes
The type that defines the tax fields.
end note

class "TimeDuration" {
{field} unit : string
{field} value : integer
}

note bottom of TimeDuration
The type that defines the fields for a period of time in the time-measurement units supplied.
end note

class "TypedNameValue" {
{field} name : string
{field} type : string
{field} value : string
}

note bottom of TypedNameValue
The type that defines the fields for the name/value pairs for item aspects.
end note

class "UpdateCartItemInput" {
{field} cartItemId : string
{field} quantity : integer
}

note bottom of UpdateCartItemInput
The type that defines the fields for the <b>updateQuantity</b> request.
end note

class "VatDetail" {
{field} issuingCountry : string
{field} vatId : string
}

note bottom of VatDetail
The type the defines the fields for the VAT (value add tax) information.
end note

"GET /item_summary/search" ..> "1" "GET /item_summary/search 200" : "200"
"GET /item_summary/search 200" ..> "1" "SearchPagedCollection"
"GET /item_summary/search" ..> "1" "GET /item_summary/search 400" : "400"
"GET /item_summary/search" ..> "1" "GET /item_summary/search 409" : "409"
"GET /item_summary/search" ..> "1" "GET /item_summary/search 500" : "500"
"POST /item_summary/search_by_image" ..> "1" "POST /item_summary/search_by_image 200" : "200"
"POST /item_summary/search_by_image 200" ..> "1" "SearchPagedCollection"
"POST /item_summary/search_by_image" ..> "1" "POST /item_summary/search_by_image 400" : "400"
"POST /item_summary/search_by_image" ..> "1" "POST /item_summary/search_by_image 409" : "409"
"POST /item_summary/search_by_image" ..> "1" "POST /item_summary/search_by_image 500" : "500"
"GET /item/{item_id}" ..> "1" "GET /item/{item_id} 200" : "200"
"GET /item/{item_id} 200" ..> "1" "Item"
"GET /item/{item_id}" ..> "1" "GET /item/{item_id} 400" : "400"
"GET /item/{item_id}" ..> "1" "GET /item/{item_id} 404" : "404"
"GET /item/{item_id}" ..> "1" "GET /item/{item_id} 409" : "409"
"GET /item/{item_id}" ..> "1" "GET /item/{item_id} 500" : "500"
"GET /item/get_item_by_legacy_id" ..> "1" "GET /item/get_item_by_legacy_id 200" : "200"
"GET /item/get_item_by_legacy_id 200" ..> "1" "Item"
"GET /item/get_item_by_legacy_id" ..> "1" "GET /item/get_item_by_legacy_id 400" : "400"
"GET /item/get_item_by_legacy_id" ..> "1" "GET /item/get_item_by_legacy_id 404" : "404"
"GET /item/get_item_by_legacy_id" ..> "1" "GET /item/get_item_by_legacy_id 409" : "409"
"GET /item/get_item_by_legacy_id" ..> "1" "GET /item/get_item_by_legacy_id 500" : "500"
"GET /item/" ..> "1" "GET /item/ 200" : "200"
"GET /item/ 200" ..> "1" "Items"
"GET /item/" ..> "1" "GET /item/ 400" : "400"
"GET /item/" ..> "1" "GET /item/ 404" : "404"
"GET /item/" ..> "1" "GET /item/ 409" : "409"
"GET /item/" ..> "1" "GET /item/ 500" : "500"
"GET /item/get_items_by_item_group" ..> "1" "GET /item/get_items_by_item_group 200" : "200"
"GET /item/get_items_by_item_group 200" ..> "1" "ItemGroup"
"GET /item/get_items_by_item_group" ..> "1" "GET /item/get_items_by_item_group 400" : "400"
"GET /item/get_items_by_item_group" ..> "1" "GET /item/get_items_by_item_group 404" : "404"
"GET /item/get_items_by_item_group" ..> "1" "GET /item/get_items_by_item_group 409" : "409"
"GET /item/get_items_by_item_group" ..> "1" "GET /item/get_items_by_item_group 500" : "500"
"POST /item/{item_id}/check_compatibility" ..> "1" "POST /item/{item_id}/check_compatibility 200" : "200"
"POST /item/{item_id}/check_compatibility 200" ..> "1" "CompatibilityResponse"
"POST /item/{item_id}/check_compatibility" ..> "1" "POST /item/{item_id}/check_compatibility 400" : "400"
"POST /item/{item_id}/check_compatibility" ..> "1" "POST /item/{item_id}/check_compatibility 404" : "404"
"POST /item/{item_id}/check_compatibility" ..> "1" "POST /item/{item_id}/check_compatibility 409" : "409"
"POST /item/{item_id}/check_compatibility" ..> "1" "POST /item/{item_id}/check_compatibility 500" : "500"
"POST /shopping_cart/add_item" ..> "1" "POST /shopping_cart/add_item 200" : "200"
"POST /shopping_cart/add_item 200" ..> "1" "RemoteShopcartResponse"
"POST /shopping_cart/add_item" ..> "1" "POST /shopping_cart/add_item 204" : "204"
"POST /shopping_cart/add_item" ..> "1" "POST /shopping_cart/add_item 400" : "400"
"POST /shopping_cart/add_item" ..> "1" "POST /shopping_cart/add_item 403" : "403"
"POST /shopping_cart/add_item" ..> "1" "POST /shopping_cart/add_item 409" : "409"
"POST /shopping_cart/add_item" ..> "1" "POST /shopping_cart/add_item 500" : "500"
"GET /shopping_cart/" ..> "1" "GET /shopping_cart/ 200" : "200"
"GET /shopping_cart/ 200" ..> "1" "RemoteShopcartResponse"
"GET /shopping_cart/" ..> "1" "GET /shopping_cart/ 204" : "204"
"GET /shopping_cart/" ..> "1" "GET /shopping_cart/ 400" : "400"
"GET /shopping_cart/" ..> "1" "GET /shopping_cart/ 403" : "403"
"GET /shopping_cart/" ..> "1" "GET /shopping_cart/ 404" : "404"
"GET /shopping_cart/" ..> "1" "GET /shopping_cart/ 500" : "500"
"POST /shopping_cart/remove_item" ..> "1" "POST /shopping_cart/remove_item 200" : "200"
"POST /shopping_cart/remove_item 200" ..> "1" "RemoteShopcartResponse"
"POST /shopping_cart/remove_item" ..> "1" "POST /shopping_cart/remove_item 204" : "204"
"POST /shopping_cart/remove_item" ..> "1" "POST /shopping_cart/remove_item 400" : "400"
"POST /shopping_cart/remove_item" ..> "1" "POST /shopping_cart/remove_item 403" : "403"
"POST /shopping_cart/remove_item" ..> "1" "POST /shopping_cart/remove_item 409" : "409"
"POST /shopping_cart/remove_item" ..> "1" "POST /shopping_cart/remove_item 500" : "500"
"POST /shopping_cart/update_quantity" ..> "1" "POST /shopping_cart/update_quantity 200" : "200"
"POST /shopping_cart/update_quantity 200" ..> "1" "RemoteShopcartResponse"
"POST /shopping_cart/update_quantity" ..> "1" "POST /shopping_cart/update_quantity 400" : "400"
"POST /shopping_cart/update_quantity" ..> "1" "POST /shopping_cart/update_quantity 403" : "403"
"POST /shopping_cart/update_quantity" ..> "1" "POST /shopping_cart/update_quantity 409" : "409"
"POST /shopping_cart/update_quantity" ..> "1" "POST /shopping_cart/update_quantity 500" : "500"
"POST /item_summary/search_by_image" ..> "1" "SearchByImageRequest"
"POST /item/{item_id}/check_compatibility" ..> "1" "CompatibilityPayload"
"POST /shopping_cart/add_item" ..> "1" "AddCartItemInput"
"POST /shopping_cart/remove_item" ..> "1" "RemoveCartItemInput"
"POST /shopping_cart/update_quantity" ..> "1" "UpdateCartItemInput"


@enduml